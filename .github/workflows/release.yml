name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: cloudhost-linux
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: cloudhost-windows
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
        
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    
    - name: Build CloudHost (TUI)
      run: |
        cargo build --release --target ${{ matrix.target }} -p cloudhost --verbose
      env:
        CARGO_TERM_COLOR: always
        RUST_BACKTRACE: 1
    
    - name: Create release artifacts (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        mkdir -p release
        cp target/${{ matrix.target }}/release/cloudhost-tui release/cloudhost-tui
    
    - name: Create release artifacts (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        mkdir release
        copy target\${{ matrix.target }}\release\cloudhost-tui.exe release\cloudhost-tui.exe
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_name }}
        path: release/

  release:
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    
    - name: List artifacts
      run: |
        find artifacts -type f -exec ls -la {} \;
    
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          artifacts/cloudhost-linux/cloudhost-tui
          artifacts/cloudhost-windows/cloudhost-tui.exe
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
